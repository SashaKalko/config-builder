// Generated by CoffeeScript 1.6.2
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(['jquery', 'socket-io'], function($, ioSocket) {
    var Editor;

    return Editor = (function() {
      var id;

      id = 'editor';

      function Editor() {
        this._getCurrentClassName = __bind(this._getCurrentClassName, this);
        this._getCurrentFileName = __bind(this._getCurrentFileName, this);
        this._initExecuteHandler = __bind(this._initExecuteHandler, this);
        this._saveNewFileContent = __bind(this._saveNewFileContent, this);
        this._initSaveHandler = __bind(this._initSaveHandler, this);
        this._loadNewFile = __bind(this._loadNewFile, this);
        this._initChangeHandler = __bind(this._initChangeHandler, this);
        this._initEditor = __bind(this._initEditor, this);
        this._initSocket = __bind(this._initSocket, this);        this._initSocket();
        this._initEditor();
        this._initChangeHandler();
        this._initSaveHandler();
        this._initExecuteHandler();
        this._editorContent = "";
        this._loadNewFile();
      }

      Editor.prototype._initSocket = function() {
        var _this = this;

        this._socket = ioSocket.connect();
        this._socket.on('connect', function() {
          return console.log('connect');
        });
        return this._socket.on('disconnect', function() {
          return console.log('disconnect');
        });
      };

      Editor.prototype._initEditor = function() {
        console.log('Creating editor');
        return editAreaLoader.init({
          id: id,
          syntax: "java",
          start_highlight: true,
          allow_resize: "no",
          allow_toggle: true,
          language: "en",
          toolbar: "Editor",
          replace_tab_by_spaces: 4,
          min_height: 350
        });
      };

      Editor.prototype._initChangeHandler = function() {
        return $('#editor-file').change(this._loadNewFile);
      };

      Editor.prototype._loadNewFile = function() {
        var fileName,
          _this = this;

        fileName = this._getCurrentFileName();
        return this._socket.emit('file', {
          fileName: fileName
        }, function(data) {
          if (data.error == null) {
            editAreaLoader.setValue(id, data.content);
            $('#' + id).attr('data-file', fileName);
            $('.ouput').text('');
            return _this._editorContent = data.content;
          } else {
            return console.log("Error loading file: " + data.error);
          }
        });
      };

      Editor.prototype._initSaveHandler = function() {
        return setInterval(this._saveNewFileContent, 300);
      };

      Editor.prototype._saveNewFileContent = function() {
        var fileName, newEditorContent;

        fileName = this._getCurrentFileName();
        newEditorContent = editAreaLoader.getValue(id);
        if (newEditorContent !== this._editorContent) {
          this._socket.emit('changeFile', {
            fileName: fileName,
            content: newEditorContent
          });
          return this._editorContent = newEditorContent;
        }
      };

      Editor.prototype._initExecuteHandler = function() {
        var _this = this;

        return $('#execute').click(function() {
          var className;

          className = _this._getCurrentClassName();
          $('.output').text("Executing ... Please wait!");
          return _this._socket.emit('execute', {
            className: className
          }, function(data) {
            return $('.output').text(data.output);
          });
        });
      };

      Editor.prototype._getCurrentFileName = function() {
        return $('#editor-file').attr('data-base-path') + "/" + $('#editor-file').attr('data-base-package-name') + '/' + $('#editor-file option:selected').attr('value');
      };

      Editor.prototype._getCurrentClassName = function() {
        var className, classNamePath;

        classNamePath = $('#editor-file').attr('data-base-package-name') + '/' + $('#editor-file option:selected').attr('value');
        className = classNamePath.replace(/\.java/, "").replace(/\//g, ".");
        return className;
      };

      return Editor;

    })();
  });

}).call(this);

/*
//@ sourceMappingURL=editor.map
*/
